(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     38367,        748]
NotebookOptionsPosition[     37652,        719]
NotebookOutlinePosition[     37995,        734]
CellTagsIndexPosition[     37952,        731]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "x", "]"}], "+", 
        RowBox[{
         RowBox[{"y", "[", "x", "]"}], "*", 
         RowBox[{"Tan", "[", "x", "]"}]}]}], "\[Equal]", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "x"}], "]"}]}], " ", ",", " ", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", " ", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.860556705705866*^9, 3.860556763712538*^9}, {
  3.860556794697204*^9, 3.860556885865759*^9}, {3.860557463402599*^9, 
  3.860557464521614*^9}, {3.860557511957288*^9, 3.860557540759759*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "x", "]"}]}], "+", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.860557467429392*^9, {3.8605575314107323`*^9, 3.8605575430926867`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8605574578182383`*^9, 3.860557471031819*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], "/.", 
      RowBox[{"sol", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "10"}], ",", " ", "10"}], "}"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{
  3.8605567535118275`*^9, 3.8605569842140985`*^9, {3.86055716229703*^9, 
   3.860557182317253*^9}, {3.860557247932914*^9, 3.8605572755365067`*^9}, {
   3.860557320887311*^9, 3.860557385809374*^9}, {3.8605574196163864`*^9, 
   3.86055744300119*^9}, {3.8605574861732435`*^9, 3.8605574939382415`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
0vaw0/24mUyKr5jsKu58domm/aUPn0qXB6ORFdzGv5Tl64Pf+FaQ0vl4fwUn
55V+XNrSg0cP09Q8Updx1QP7WOiHW/GBD43Hn4cs40Kqedlzai24xs0wp0zX
ZVxuUPKjqVQz/mudmsnYu4yHavbNv1hrwDno3Fv065fwoYO77ZO+/MRvog2S
PEuL+FUjg6sGV4vw72ygs4m5iBfhBnSXwgKcv8rLQrd0Ece3HL/wkpaLZ5qu
RDmHLuIfvnz6o9eUgfdfmRdsllvEM6rZag9r6+DqO/LUxjkX8XTnDzczfz9C
3jNuJpxjC7jh8TlvdbkYJH5/KkQ7fwH/GxSa83o1DZ0IHyPHH13AZTW/Bnfa
fEYJZzK35Ksu4AZ5+ZEN54rQuNRVgzr6Aq5bkPZe2xhHQWmDfiw98/jjY86f
5QK+o2/FfWv2bvP4weKuZ+5rFUh1qH1mR9wcblacpf1lpA65TShv3eg/hx/K
uJ8b4VqPCuZ9zq05zOFeTX63Bufq0X4OpfKa3XO4qYys7eJ8Azoh7xF1pWkW
v5Q7OM3sbEKRSrXVJl9m8VnfGannxs2oU02OtDtxFqerawiWFzcjO6zqMofz
LH6+40FZVlQLunlObE8SN+F/uvJW6bY2VGjn5BQ0NYPzBpHPJQS1obWr3xNd
2mfwozeGtCh/21CAhwM39nYG/yBXwBkU3Y6qfIrRltAZ/Gue4vGUsXZEfSTo
xndzBu97u6hqjnWg6KjCri69GfxkFu/JAEYH6ornEyjdOoN//3XvCadSJ5JJ
sT2YwT+D3xayPK94oxOl5XC9v8OYxg0snj45udaJCust7gt7TON5B/JzExa6
0Frb+0+r1tP4iZSpK05q3Uivh2Ww/9A07m1VdGP6UjeqHk83+USfxm0okwzV
2m7EP7fmH7MyhU9rXhGfWO1GpqsnPvv0TeG6GtsvuG1joC7uZVmTj1P4htHV
qI77DCQjdNxMK5qw17jNlKQw0EWxpCCp+1M47VTSHp9qBkqXnS9mt5/CvVWo
x4XHiX1P8ej0qNEUHpz4a0sgHxOpq77a0rRzCu+LPVPTup3Yf7Wmz34Rm8K/
kY+e4jEk9n3dQ08TN0zhck92jSpeYKL1gy9LHw1O4s/yL1er3SX252P/Fpx/
TeIfr33Zt+0ZEz001Vc2z5vEP42Zxou+YaKas1E2KG4SJ4vdNN+Qz0T8F0Yi
NvtP4n579/4dKGciUwdUxXt1Etff5dpc28REL1yer838N4nHih77+rWHiRi3
/6p37Z7EbxzUOlwwzERy3jqXSqQn8cO94SolU0xkH/jkZTrHJH6O+VCrb4GJ
0kP7fj0bm8DPuH7eLbnKROMRWmx3mibw5nUhYfd1JtoZ93i39ZcJXPPZ029T
BN9OZjoeSpzAT5TN7IleY6KijJ2vVR5N4EYHI59cXSb26U+BzXTnCVwdl+hw
mSPyLeykrJpN4LWX9fWy/jHR+/Q32hU6E7geqX/ZaoCJRF5ev/JMZgKXshFP
ZOtkIt/H2i/Osk/gJgNzC8k/mahlniPsaNM/nH9xc/OhYiLetphJZtw/XI4S
Lz6TyURen1X+c7v0D/fuUvmW9YKJTsR8zyKr/cP1dJSq/P2ZaNNdM/64pXF8
88qy4a1rTLRwdvi6Wuk4HuNeYfvElKj3Xq9fZSHjeNN51oNN2kzktvYmdFxm
HG8xHnHcsM5Ah5na477DY7jr7ejTCwwGEoefxzbmjOEBuqOm2l8Z6LvPLA92
aAy3L6Na5rsxUKTtI8cm/jFckSfsGqsxA13Rl6y53DGKz0iYJORvYiB+9oOP
n10bxYcfxUy613Ujq4fhlL7nIzj5usjmrbRupH5F8cqtcyN4zAWdlpDeLsRx
pKiSe8sIbnIkIjP6XRd6z90fqFE4jHskUh1hfxdaCd3JEdAzhAsXqnFone1E
ddcrLoqlD+EKH6x8MqQ6UZLJ2bL3N4ZwC8cWEkdvBzoi6OffyjGE78VtzoTY
dqAXEQ0sW5WJvTK2TqfyTDvSjHVZr74zgDvXSvJxy7Qi57QPCwJCfbi/7soN
zwMNSJXPyU+v5zee8MPbIWuxHk26bue78e433jbXoVH7vh657k2Tbzr0G7dU
+G3WI1KPbv5KNI707MWfvh05KNrxC00PbzPcVcPE+S3S1LN2VSO3nNTzkfZM
3BuTCOBPqkJz9za5zZOYONlsmza7QBVa4Jd+9XkXAz98ek6pfbwSrWgKzu57
1YXXxQ1T7D6VIw6/hQQD13Z84pbwqTtXvqNAo5t5b3na8YXt9GndP98QWXiq
mvy2DZepo9L1bb8hrrSRuarOVrzyKz1G2RoQ9RfD6PjBFnwiRyRlS3sRehp9
1jaL2YxnRVBF3g18QYK2bbcEPJpx6635pAPzhYg2W5/Y+L4JJ/24EjUi+xmJ
iJctnBZpxCd28IQuxOeiF/37+T5nN+DOQXd3/y7PQWLvi+XFjjXgqnPmNJup
T0hyf4Fxl089TopanbUwzUb6tWaG31p+4QkO+uHvH79HBjYmbn7cv3A4eaSE
LPIOHZ4xfHUQq8WtRaPvO2dmICOxfbM/0mpw79+ne2rHUpGZvfzrBs8feIJx
UphzcxIKcrnxMCy3Eu9hPSJblZ6IvnqWXD8xXoEnLIR9iXj4Gik8v6DbYFWO
g1UBev0lHpnHf9oUFl2Ge9v8ulSVHosep7Hynqgvxb03atY4ZsSgKTyps16v
BPe+mL7vTW8k2lw9/f3Z3e84CAzs9dwYgc606Kf/l/MNh3whC2Or5whG+27X
bwIc0yu3Nt/0FA3+uwRyX4txkvtQd+ihEHScg/wkUeUrTqKolqIrQUhq5+Ht
iQKFOGmgQKNT/AF6YDi4JOtXgJMadeVl3vmiUauHP17P5OHelKsJoxe80Ul3
xWhZ+1ycVHRK5Ze3JyoMrrR/3foJJ91YbXN4cBvJJl3eJWuYjZNqB5b/Nbuh
h5/JbK8Ls3AS7zUsztUFMV7992a/+XucRBa9ZZ7viN7VPNPbr5OBk9YmWhLl
LqG7i/VMTCoVJxX+cri9xRYZbha8h214g5M8bULPBp9FG0+eEMP6X+MkRflQ
sbWTqHpd4fr90DicJHNc3tLwKLp85k2al2kUTjLf+Z51w37E9mlT/z2xZziJ
JGOfc0gdYaJG+5bgAU7yrmpUfC6JJqJf2E2+cCXsZns3JszqerKElxnsPoMI
fzjeU6KrEnOhgqZ5n2A24R5nPsQQ/TjOTQ1GpJ7VKxkvFNHJnW1FAfvDEUlV
Me5ckjbKaz/tG3g3BpEeNn65PHgQ8cKIfKlFAiIpLGit55gg9DwjoPRWEiJZ
Hj7dkn4audhfHSoNT0EkGh6r32yFErW3GZV9TEMkniRNxgs71MQz8r6sNhOR
Jn521v2+gjh60gXKRz4gksn9Vemy6yj2zK49F/w/ItKXzMadMjfQLv2Iq32C
nxDpxIsOiXR3VLt9NvbC6xxEetM+wuftQeSRu36hOB+RMA5R30Af9GKIptZv
9JnwL+ot7PND6o1utnadhYgUI//E/mIAskvRKLNb+Iq8z57Qv9L2GK0+CZ/r
D8CJ/EPPXfgRiqr3Lj3PDgKE6afoP/73FNlttihTF/2O4Nbw5SGdcKQqzsVw
7fmOSF8bw3etRqBVauFc9tsSBNJ9PtfqolDkoqjiTs0y5D3Vf0Yu8yWqqGkP
2nmyEpGehIq5iSWiy7c7Ks5u+4Fk9sT1/2eRhMgKnWz+rFUIKxM2EExORkfu
dnk1fapGMh7n/qs3fYtqtjJdb9J+oR7ZLAFtxXfIsZn5IW70FwKp8G7ZnPco
AHOes7WtQ8BcKPFVyEJbRp13Pt5Tj7Abx63iyj+iy/qu7zqHGxCJY2fCr325
aPeLqep/Zo3I29LEq3FTHiL/cx1mLWlEpC0upyoF8lFazI0t2182Ie9kxRKt
2QI0POn22vNoC0rgkKlf/VuEHBNuRUhmtqPDZrn3DXK/o71z85/URDoQ2dbq
7oR+CeIxut1w0L8DYW9ddv1pLEHv5m9TnSw70eW5epLXfCkaN/Z4VMzTjazL
33TzGVWgAq/i4g+aPWhh/Vj1MekatEf5W7ZJVB8ajdfYEM7RiHY1tUQW/+hD
yebnDx4zaUSqd0c9tq/0IfLkkbnGF41o84+N+mSbfrTy+4Gf6vYmJHTRqRFX
+oMOsLG63zzWjEZjxWdUigdQcOTtgBjPVvRXX60tdmIAjRo+cVOFVvR72KCI
S/4v2h6hG6PM2obad7v6DwT+RZU5m9P1A9tQeVMlLf6/QZRzaHPY1sB29IrH
fRfvnyEUXVGas9O6E8V8eix6d+MwGkZvhHdFdaJIi9erg4bDyEH7oYvmz04U
nFpTVvp+GKlK2D+R1uxCtw/Im3neHkF8R+5A+1IXujGye89w+gj6baOnuHVr
N3IKM5Yy7x5BIgd1Fw6adaOLPXcGduqNonDJV6O1md3ohGed+wj3GIrfmnTS
5QgDHZMfsDijS/AZM5b7ToS+qFrWrXAeQ74nbDdsfcZAuiJbOJOax1DyrqVp
7QYG0sb3jvCTxxHf5Zdr4RMMpGF/4pfXnnHEH3bsoRsvE23LuRdl8Ypg6aX0
ND0m2nz2+d3K+nHkGy36ZtqC0H8saVaabP/Qdxvp3nQXJpJMK9ZP1vyHfq9N
pP4IIPSXSdMWwSv/UKyGwH9HYphIaH6I2/vlPzRu3797C6Gv+OLX/439JOzR
M1UWRUzkn8g1rEyaQMnkXfeYVUzE4k7vshOdQFxXD9Z/aGUiC+v0hgKNCeQs
bk9K6GOi7CPoB4/JBCo9zDzlO8ZEXLuacOurE8j2fj2rySwT2UpfycsJmEAP
lWePsRD6sZCylklOnEDGbcuPwv7//9NMWJLl1wnEEzYhvUToTwfGlpistgnU
8S4qSJ3g75VFT9lmJtCJjJ+nd60wkdin/wLNqZMIM/ujuELoT9e4gXuZSpPo
JZ39kzehP6sC77qRDCaRzUU/vOgPUR9X/qumNpOox11ve3o7E3lYvrFJ9ZxE
3NNco3rVTNRgsMd8JWoSeXT84fApZCIltV/GJp8mUaXXzZjzb5nIT9zuYHLt
JBJ4dqyjmdDzXeyLOgtDk2j//iP8vXeYSGMiRN2IfQrxOwzEelgxUXCH3NYE
mSn0oOzpfCzRr/7SfOkZnSnUvon0QU+eifZ+MBI+fHoKfX0fcMV+AxOFv+jl
iXWdQkNcdn9YuhnogBP3kn7aFJJ7nvH8WTADxZonTESVTqELG/m+3rFmoBm9
XX9HmFOoVe1UZLkaAyVvtGp6LjyN5FGE5d2abrSyYabqr9o0cvY04OmIIPal
0YffdI5No32yvZNBlt2I7Vv2+z6/acTSrs7ZQOhPy4xDb7ReTaOk829qrRK6
UE5E18vHhdNoSJ51RcWyC9k5cDzaOTmNsl0XBnyqO1GR6cv7gTwzSH3vquia
VyeiIVX3zi0zqHKDYXzmjk5UJmRxwe/8DBJ0qsXDHnYgqbXxM613ZlCMw56C
EtUO5D7oZ7ItYgYd3/GjQLSlHW3++m5fY/UM0r1+4qeiSDsKsN8gIq89i/7Z
0PIe3GlFDJNIvlums8gk78Tzp1ytSFNnG3v19Vn02HGLX0Z0CxqgnppyTZlF
ynSqAyWzGRl8Tq35LjSHjs2mj6h/aETxSftKhHfMoZXmZ2KPFRvRXEjDZ4cj
c2henrFrIL4BpdiupAj6zKGCmVSW1771iJPHxMd2fA75Xa3I2mRUi8y3WIAm
ZR7p/KSGfaD9ROl6dutcCvOIEvt70bG1GhnfuX3v05l5tJsjUdf36A8UOZBw
h61sHhkxDZzkx0vQ5m+TLikvF5BX9nOO4b1Z6HbXcpZH3gJKd7ARblFKR1Xz
7BPG9Quo3lpCRbgsCTmpiDnNcyyiGpmgU3tbglDeSz2Hw66LyIqjbu39rWT8
oPtz2+HDS6jCuW6Jv7gEj3wW97r4whJ6e++smXd6GT6Y+bYnzGsJHeku5TsY
W4EH9305r5OzhAoeX9f78KQabzLptwiWXkYxo8kroR31uN22XSdV5pZRa0xV
8bY7HbhfT4u+a9Iq2iLYsdmpcABnfD567XbRKjIurfzmZvIX3/McIr2aV5Fo
kFHcqb9/8YmD6UNBnGsox+/s0ouNQ/j5jHtPkq6uoXhfbY8WnxF8j7tCZ9PO
dVTndpx1074JfJFd+7O4LQkr/BFywtJlFs96GWDiNbUBW1NlTLcpk6BaKOAv
lcSCXWUEjPicI8HA4wder3lZsK7tx6xkQ0gg4emfWarIgmkafNygO0qCh5a+
ZG4rFiyTuspRnrYBrCW9IKqaBbuYGzNYK8MK/K9uqn5MZsV0fqeu58+ww7aN
Nyv0slmxhrsD5ldkOMDgidv5JpwVk3qrENJ3lAM8798Inu9gxaqW5DYoJ3LA
oJXL4D4BNiyhW6R47CgngMy1hKp7bNhX6YyehTAyXE+04+83Y8d2VzzM3zbA
BaF3XsSGXmDHeignVRQ5uOG9Sa2itjM7Fpuz41D9Jm4YX9PaH/qIHctJ2/Zt
kx03OJ7ldt1dxI7NKfCw4V3cEKyOrf2uZMf6JNbTOJe4IZNyMyikmR3z/X1g
alaYB0byGYm/x9mxQ+puG+E4DzjQshuDZTmwIEXDDTNFPBA0MmClpcKBJVW8
mz3RygPp38VHe/dwYKeGFJX+m+SBIecHbFqmHNhGEmaqqMALl3+a7+oN4MDC
BZONlB/wgn3AeuSuUQ7M5Ng//oWdfBBwTkO+Z4EDKze1/Td3iA9SNK58CGLn
xPyP5FsEneWDP78bKphSnFjAXtbnjj58YIdSFh79x4lxOlqfolbygb9wp7/G
eU6sSOyrSVIbHySPUQWYDpwYbLqTUDHIB30v72zV8OfEoveePIdzUsF2wciC
kceJaUg29Z/HqOD7y2fgYQknNj4/z3blGBUSU/Jcd9ZxYq6h26gkCyr0mso8
fjjEiXkOR19tdKECafupjTvnOLE337ZwU+9RQYY1KKmbhYzZ9bjvaAmkgvXH
6S/qEmSMK+tQOXssFbwfKh7uViRjHkpHXl97Q4UEq3NNgbsI+z+hBqv3VADN
MGt1PTImf+IOvSuPCkzeitEuYzKm6vVt2+9iKqz1L98OPEvGRL6mtrmUU0Gq
SJVd/TIZa3pt2xf0kwrnHWIkA33ImKHaPcy8gwrL7ZTayRAytmmU48UEkwrR
hne8LGPIWJhLnpbwHypofB5UqUghY4yA8/OVQ1SoVzRnqn0iYwW/+fLI41Rw
iq54EouTsV5z+qnmSSpwkbUwzhoydnxorUBllgpvb6VMuLSRsfDs6B+0BSoc
+Et/3dVPxuIqJlwCl6jQY/bgv0OTZCxj0CwhYIUK98pnNmSvEv7S5wwE16gg
pmmXLcFFwdRRm7nSOhXy3jTaBgpTMB6Dnl+1BJ+k6wtNyVGw7cl1Kf//f2jC
P7vEcgcFk7E73FVEcPCMrFuFDgXbrKXkykHwVrtnCuqHKdhDu9hrXatUKG8k
NceaUjCpWHKrLvF+W33nB5w2FGw9Q7xQmYhvPZu5y/UaBbMVLduUNk+FWLnj
A113KFh2rOb2jzNU2B1WHHkogIJ1evf9Pkjk37xB5VB2GAVr+3Pf9tIYFVxd
4uYlXlEwz4H1cjpRP75entTADAr24nXkjv/6qZBh4mk+lU/BnDbnFosS9T8M
I+RzpRTM5wAl5no7Ffp3nP1cUUfBunQ9h080UsHnVdUV9W4KVmqr1lVSQ/SX
ukcsboiCrfj4x38vo0KhV1oV5xwFizYh2x0n5mHm3MNt3XxcmHLyTIMQMT9P
f853HhLnwjyL/CePEvOlvO9ScPYWLuxhwtNVQWL+7CUMxgIxLqzy2ZUR44dU
YA3OjZsy4sIy2crPlhLzm7CsYHzuDBdmp1DQ8sOVCu0drB/UXbmwvm8C2wPO
UsH9yA2rOC8uLLJF9v2+41QQLPxNJT/mwp6uCQYF6FHB6MU35+4kLoyhwPrt
5xYqFJ++r/6wmQuzvFw5sXeMD85WjP+e6iX8PWonH3XzwYLm+efnxrmwMwd/
e139yQdqwvtm1Dm5seNngqnjGcT9bVrK7d7Njc3WRTmvXeCDR/+5a++M5cZu
BH9mAvBCWI2SY2YaN+aQG/Q0I5UXYg8x4zflc2PmUfHDsk95IWvfYTaRBm6s
1z6vNeccL7RtFfu1wsmDJd+4x/d4mgcUWYrtym/wYMLSW08DFw+o33ONQj48
mHtu4LbaEW7Yu7C5qiCUB1OIVNN0r+EGk/EnOzLSeLCq5xPsL4K54VaHzdIT
Jg9m2vudYUDmhvJs9qdnjvJiXDWn/bTGKVCnXPi9wZwXsxVwjL7ygwIdqU6z
R+15sczB908PJVNgPL7VQteHF/NZjJ7iPkMB4cdpm+TzebGeS/o324rJcPHC
sS+jcnyYpYmhVZQnJ7DRIgbuL/FhiSZKD8p+sIHguBefICcVc3Z7qTz2ig1k
Ky9rJgtRMbaLN0b+3WQDXc+9AZXbqdjSbfftj2XZ4E5/3yYBKyomFv/Kb/ct
VhjPUb+YWELFFJSN4ZokC4wqDbrYGvBjKXe47wUUruEzG7sfZBjxY+mPTPzZ
bdfwZbaGFzMn+LE7b32f+1HWcC7ml28BVvzYtsopeGC+im95/kQg4zY/1s9r
Xdkzt4zbLmt+nE7nxxTu7rzO1FzEW6sfTPhTBbChR35/Vxqm8XDduIOnhAWw
lL4nhh63pvETH3NiNkkKYGJk2GMgMY3XRvYdKFcSwNRtzkc32k/h5Tb7X3Aa
CGALtbtKOUmTeN78yv4gTwHMxKT3Azwaxd0caFEWfgJYrbByXAljBFfv3jaq
FCSA3dh5Z/s7jRH8/XeLyOooASyg4Nvcgb4hPCWkYJjnkwB2d/erxsWjf/FI
ebfnT4YEsL8fxwZ6jX/jppGPB60mBLBPonqdSjm9uCAlaZ/qvADmkfHLI0qs
Fw8dr/9bxyaIfR+plm9oZuIBn3fsFZQRxBR89W492dmJux8f6Q83E8TyT9ew
K9g34BrfWfZcPCeI0eAVide8Hp/SEHuyy04QK2xv0ogxqsOdxAy1W1wEsfOM
QsfLd2tw+z8pIRtDBDHukj/rFd6l+Km7tpoxJYKYlsrswtMzKXhkHI1j/ocg
9ipKgCHs9wpvwcubT9YJYtjVu1933g3Dzdi23eTtFsQmLU4e3evkicxDpj95
zwlifuJeHytUM1H0hzd+3SuC2OmPZWRNoY+orf70yT2sQliZwY6276w56Ixw
0dQ0VQhTJu7AXNlnZPHKX+3SViGs50gDp8yl7yjmm+aG0h1CWLrrO3nVLyWo
s2+wTkZTCDOR9X7Pw1WGLBWPOXfoCWGGvjqOm6Mr0LmP9A/HLIUw2nf6loqb
Nci6JGW7xhMhjCcKaVu+bEAJf8xXnkYIYWPsKZ554o2ol5O7ZuylEKbfQ5O4
Q+z7tkbXr75NFcIY0l7ndUKa0IVmrXSx70JEP27/bDrVgpLnh+7cqhTCnDwG
ZcK+taB+0VjDploh7HvlFfnvSq3I7jxpKKRTCBO75qrgM9uK7P9WbtkwK4Q5
B059znJsRymUu/PnloUwiaU1392l7ejvNuWKwg00zP9nxU590Q502fmZvRsf
DTvzwU5s5EsHSg3T16yn0bAoxS6nEEonGsyZZVcRp2Hcv9gHi0w70ZXFM2/+
bqFhZjzXbtX2daJ0cZ6bB1Ro2HYcO5u3pQsN7ys+8FqDhjlLvVzTvNKFHHzl
+i3207DTm00p1D9dKD256VP+IeL5s/DXUbobjZQH+NGMaRi21fmG8+lu5Mg9
IldrQcOsri7YugNhv1PIxm1Dw9Tx8ZtPJrqRw+CjgUOXaJj9xJTyDSkGulSm
mP7tBg07aX3yS+oNBhrYufB47Q4NC/Z90rThJQPZJVZc0/GmYa6C2mIawCD2
anu13GAaxvQOurGTjYl6x3YJTYXRMH66oxmZ2C+tLdlnVV7QMJcDP1jLERMx
q5parr6iYTzfdoc4WzDRee3kgtQ3NGzv6WIazw0m6n57I+ZPBg3j0oysiX3E
RJbC+p5y2QQnrc9tjmeiDn/B81YFNKxBnHPgfRYTnZnuRbHFRL5/jy/v/sZE
bTYfZdtLaViySPfbH7+YyKzOm1W4moYpcnZcvdjFRM26Jn9O1NOwJB3bFv6/
TGT6TrriSSsNW245/KCO2Ncbxf+l1nTTML8bTIU0Yp8/EVQcROmnYaF+Rddf
LTNR/UKIo8Ewkf8OH5WCNSYyuXTO2G+Cht3KjddaWGeiX83bVWGOhvUcE79u
R7DxgRWB1RUa5h1hVr5hlYlqsquntVnp2BGfnzrNC0x0VPZlszuFjvF0d3f0
TTFR1ROH/E9Ugs0ffVEfYaLDa9ovJuh07L3sbpaKXiaqcKTcVZagYzkid5lv
WpjIoLPN0kGOjsU/+fmk6QcTlRmm6r5VpGP+qWZnzb8w0YGCWzL9KnRs4kh6
hGYGE33ffIhFdhcdM897FOf2gon2Rwj3n9OhY56fkro2BjARsA6UxeynY0GX
TCs2uTCRrmvu29ZDdAyrtutKIvq197jp1f9M6VgVy4VPHFuZ6MtX+WOhFnQs
+dDn5DleJtqzfVql2pqORWcXSV2bZCAtStjUgWt0LOYxiytbDgPl3bJp8rlB
x4pim0pUnzOQxoBqXvEdOiZjNBa65MxA6iW/7uwOoGOhlA3d9xQZ6KPaq7M3
g+nYyk0zUX0WBlJNcNqXHUbHIm2k93/t6EbK93g3bH9FxwwGKfTBwG6kqHX0
oXQBHZuLN32IN3aht2/EHCyL6f+r4c6jqereB4AjQ7juKWW6A+65zZmnvKj9
RINSb6lUQlLIUIZMSYlIojSZkiRpoiRFhnK3DEnIlJmrUMhMGd7S97TW7/fn
Z+3nefbed52z73PXWfeAVrzKw/p77WjZ4gGzmyVUfJdrY+WJdrRkLJxYVEut
P8q5K0yqHSmll8WKDsjAeOLMYKleG9pzJzevYlQG9K2UMrpnWlHEjbT2qCkZ
yPrjvnaEur8nA6JIORFZeHnsRdyIUSuq2LY3Y7myLGBt3nVv7RbkO9xbarpX
FoR1Vh27MtOIqjRFfkS8lYXkosLAWk4dElo2JbfjvSxo8K11ZOtqkT6j32BR
jSzor9h5fiP1+z9FqCroVocsnHwqqnPuSw06WR9NezItC4/GRWwiNn1ES3yW
LKlSk4PyDFuZzP0VKCDXZDdxSw40wiJumjCKkJZ1zajtXTnINdnDFE3AaOCP
dVTmQznYyZbLZjIxOrDZ9735SzlYENkhWWFciAwaH6HoKmrcNFO9MTAfjfvr
dvTUy8Ghr0t2hMbkoTT221O6rXKQ/On0WYdnuUjBoS278ascCPhPpAoN5aDp
CSkVBQF5UJ4J+nPk2guUGZfw3llUHmpEAr2dirOQk+Hyo/k0eQj6uVWaNUN9
n5yDFCsFecBxXZHv3TPRq4Ve8kla8gAVDnt95NKRW/af7GF9ys/2LXPPe4yW
WV7ajRDlHzW6t448QrHJ96O6zOQh+dX0276a+8hXvVmY6yAPAoJF6tUL7yK1
evsUL1eqvkvclfsjd9BX3zFU4knlk28E3apuI4tCiQCHQCp++9DOusKbiHY4
Tj4nlBo/cqk2uy4OlYgsyRGNpPJZ25u/Tccgne1rxx7GUd4Sczv39HU0OPo+
avo2ld+173l061WUGr1XZUsq5W0KX71io9DidvejA5nUftsOJMRXhKPKs7+E
DV9R3mUS2swOQ6HciymRbyh7VK3xjQtBEy4pHSoVVH65QNL4rzMoja4ecKaG
8kcDp4PN/uhwVoF8dSPl7tiSd4K+iLHXNEexg3LyXIOn/wlUN9Ow272bssGf
XJ2zbijitt0Yr5+yson/xCMnZLx+OGrBKOXEkd7zHkfQbM8pFbuflF/nWUU9
sUFZ4WIVz39R7jGzJbItkItK9FGheQog4FHWrP1zOyJrlEV2i1PGFY2b5oxR
q9fTlHsE5UMCW9REddE1OQOYlKHctUmoezGJTAvKOjawKAucszMxF0ACtrsD
Ysi/FijCOnHrcoW65L+uoBwkNCw3KIY8HhzL0VP/W1+BrfJlKer8yIyh61G+
aqH1Tu0ftH2mwuurEeVk14zTKZvQa/LUrkITyvYuhqGV5mjVtpWasVv/xrvf
nXttieJ9mgk3c8rkFnuRa3ZI7M6F4Y37KVfniHn/dkS+5XpVbFvKs5/mrLjH
Uc9Yb/oPB8p5dTeUBE+gXcyYiKpjlJ32Q3mlDyrasMH5vhflLQz5A5P+SMNt
YvOZU5QPCJad9QtESXEpyyyCKX++aDqcFoxoReYiquGUr93QCNscik4NCPQI
X6G8Yeaz+cILaN9a27svEykbBrreWn0ZlTnSgy7do7wsv6Rq7VWkc/XNQfs0
ykecBQf+u4YWdDNZi3MVIEhTwao3LwYF0j7Mfi9UACyhutQvLw4N6Z5qKS6l
xgXEAiKqb6KK8OZYr3oFALrBxQv6SUg/64KPWasCJMvgtohNyehhm94e7mfK
9iKaawLuolC1mIX1wwpwyEbb48C8VLSuwfySlgQDkqv6JJsiH6MnvwVcJRZS
fn1B8IBoOmIuz9zyRY4B0MrLtot4gqb96WLXlzJAedHwqrMZz1CW0ofgMaAc
tKvgruYLtNR1g1+mHwMOoYF/PZ/lo+joCYvwQAbUhBDzQzILkFBhis6h8wzQ
sNdQW5n9GnUuEBwnbjBg56d8g9byQhSf8+aYewblrHKNR5FFiCa05rBaLwPi
i3psMbsM5fnN2/31O1VvY2Z6UlYZchz6aJI0zoDmOb1f/qbvEG52WkoXYAIu
umEz6VuOvJ4l9A0xmDCaF86J6KhArdZzbk93MqHPsTTIufQjulBXYeuwjwlO
wXvvftesQTqmcTvZB5mQOHagUzu4BkVpa2hddmXC4FMf5zalWrRe4vCPY2FM
sC9MOJFnXYcevSoNUHnNhNQ0xRUrqxuQher1Yz1vmaB/b++KX4xPSOjeQZvE
90wINxI/43T0E7KOmlpHa2LCyfifOsNznxDhsFJocIwJ3kqH3BqWNyFf6cvh
6ctZoCOTI7rmQAvihlv6H1FjwXRB5MvpxBZU83upC1OXBe2WM+WNnS1oVX+h
WaQxC5a0fWgqt21FnbxRuqsNC4KaIr89tmhDkbpv/pD2LLhkd4TtfbUN6adf
HG11oeLfwhFWRRu6HkvWbT3JgtmFiQZ9/7Sjjcf3xKy6wYLGw0aisRIdyPt6
gYD7TcqTTq2G+h0o9RV57MUdFsytrr2Rad+BhITGjI2esODl4vLNw3kdSGv5
/oygLBZ0TjxipH/pQHbbeAqluSw4NfczRFGiE+HYy6PbS1kQNkLILLToRCMF
k1bXP7Bg4HvlttCTnUjxs9W7xloWOOY6GsYmdKIzq1cl2Xay4Kv5oxeBrZ3o
yc5r4qk9LLDWv3l5y3QnaveZ9u4bYMGXqHO8W4up/gSXmXlOsaAVG6jxTPnI
uVf1VfZvapwJwucP8VG8RAw5O48NmSOaDgW+fFSu/uvyOgk29Cy5kWMdyUdT
e47MnFvAhvmmFk5HqH502akK+3eybGjlM368f0b1m3c0ayTZbKhx9P8SweOj
8yXxhju5bAjrNShKruKjl/1/HkSvZMPe1XdURVv5qJt+VLpFnQ0uKYkfs3v4
SFqn+gxbj8p/rWyVNsRHxpa6/XZG1PxTO652TvKRZ2DingfGbAj3KjXcPstH
yffm4QFTNlxn1OmNUf1lTbnLavUdbJi1LDhaSvWff4ZqY70s2MCynykqoay2
6B+hXCs2lP723jRAxdvoJx//ZceGfXUl8zSpepdsxFrAiQ0Z21xko6n5Xp9z
23DejQ0wLvWYTq3n+8NPz957s0F5XcHkrW4+YlQZMekBVP4Mc/2aZj7aOn4v
bFcwG7bTX/S0VfCRv5zkeOwFNrQ1yG48T/Wjj4xO2LRdZkN0w6omtbS//XpL
uVI0G+j/7VdqiOUjsQugY5/AhkaTiucewXyk9+ThnUfJbEj8mKQl4MJHjrV0
yaEHbLjitHRv4E4+ivnp46v5lA2hntKfv+rwUQmz47PPCyp+bc4jXTk+4jqm
587xqP3/zIzz+dSJdkVKLzEpY8Oi9ujCg8870blM/ysXKtlQ1PWcoxjZibpm
NzsuaGGDarWJ9QL9TrRA+VntHj4b/s20wIaSnQhtlF17s5cNGwbWnlJr70BJ
V3oWkeNsqJibqrXy60BVL83OOk6z4XRP2pUr6zvQr5asgbQ5an7mnu7T4h3I
aklwkbakIozfS7Txu96O5PPY7huXKIJpMccyJrwNzR15yFy4WhH0ophaEgZt
qIeuWd6uqQgvZcyms/taUab9Bo43UoTL76tp99e2os0LXOtTDihCmrJ9b0Rp
M1IpmDzrZqcIJzatHrc91IykHQNVDJwU4cvce9s9002os+Da+VofKl7y5Ptr
StR5cjR3jcA1Rer+mXYnzajzR9q450OcIqxn1JtlU+eV8ZsPV+OSFGHxu/cB
+3Y0IPoifr/aE0XIZwYplWyuRw8KRRJt3lHev2o/W6YWfZLZLVDwWxGGMhrf
2xqXo3zc/iRMWAksWsdVbw+UoWRXR8tdkkqgJK4X03epFB0r8s/ql1cCu+9G
2hm8t0j4eLK9vI4S+PaL6W95nYd0SobKfVyU4EoQ63FEsCBiuPv5rPdUAv7b
LKasWSRPgCFISp1UAnGfmfT24Fu8SvfFAannlcAkY9/A+Od03hGmoWp9shJ0
q1xoYyS85l0/EX5No0kJws7G7HUVqObNVj7JDe9QgrIiz/3E4Efe4eW1/K5u
Jdi7mXZ45XANT7tdQe3aqBIcyrwXv623jjeQYtE7LawMhz403Lk73Mi7RPsW
bKmoDLoHoz1fOPN51XzxAoa5MmTQPGiLR/p4u8J2qN7OUYaFsiPS/zT/5D2w
HN2Sl6cM2jnr+IOqU7wZlWuOn14rg3qpilllyBQvub7ujlSxMhQ++zMiojHN
G1LeKx34URlomz1sV0fM8MILrKcO9inDE6yT4Gbyi1c46lykzODAC/djNL8O
ASxdItFpxObA8TgfYyFxQewQlz67X5kDdubhnGAdQUxbN6R9bRkHcIzucYtI
QWwZ6fFAUJsD48LLtf7RF8KTS/0iv5hxwDjCe96Py/PwKqtQi9QzHPhX1j8j
hCOKLT1zpIWDOWAUhgbxNlEcfqHv45FQDgxf1FhT5ieKe19s28qN5EC89IJI
bpUoTqbJoJR4DriMSMXN8xHDMoX3VyS/4EBFsXqNZu58vKGhqfdPDgfcSpdn
7eTPxycGxO/Z5nOgMUMhhxQVxzWybmylIg7UOaxf3bZLHEe460knVXMgQg0C
AvrEsQDn3X+3+jkwcFF6ofs8Say+Zib3v0EOtD6Zq1ZfKokPbl/tazXKAc+w
lb1XN0niAv8ro4wpDtCSrErVwyWxb92+3pvCJFiJCKe9FaXh1L6LKTNiJPyc
5bk4LaXh+rkCW0tJEgori1c8MKFhjdXKrfLSJNTnd6T1BtLw95C+6jglEm7s
O9xjOUrDjATGpSmShK5wsdhUSSlsmrlty75lJGwWeZx7dpkUftCeWSyrSkKD
t2tl9wEpfEjXPzfGgIRb5Pv9ZoVS+IpZus+PtSSUHUxJFWyUwoV2HVoW60nY
v9/+1fohKcyMWv90sSkJ9um3uNYMOm78Kp5yw4IEA+d9l3vd6Lhsz8XEvP0k
lIiYz4QE03HO2/lxfCsS2ps6QnNu0HFsktil1YepemWuPZ9y6Nhir4hvsRsJ
icUTjSNTdLyhJNSj35OEB+waQ44YgXW0hF0JHxKs55f3fJEh8GL6vENWASRI
zziZy2gRuKFUYOvEBRLIre/cVjsQuEQ7aINCJAmbiMhX9R4Efnn3zzoURc1v
HKgrfprA0WfmtCOjSXAq/XCBcY3Aod/PqD2Po9Y/18X7kUBgb8vfK5oSSOib
d3fSOpXAu3V/sbl3SUg4cRCqswlsfC9AfksqCQf6v3xqekNgrYX/Sbs/JEGj
a4nDsVICk2dPScWkkaB5uTU7spLA0kMzYgVPSTAaVbyhW09gISt/oc+ZJBx/
4fXBuYXA4+XTv0RfkpA6+FZjBZ/AX/ROTqm8ImElPhTv0UPgutSpsV35JGzo
obUZ9xP4rbTf4Mk3JDSJTDYkDRE4K+jn1yRMQrnUc4fQMQKnDPt8LikmYc/m
fz0mJgl83fpH20AZCSpHN7X9/X/UuQrvxgUVJJh5nb96fJbAJ/Qna/SqSLgU
6Xzm5N/nTw+8PljXkDB7vfg6bY7A5osnSs/Vk4DzmkpW/iEwnDuBHzWS8O6b
jWQNZY3RsfzqFhImxM7Z/X3+pXzQM3uynQQxnZ7SV5QXVI4+Y3SRwCiKN5ih
6gkYeKRBNwn5KitKi38TePThSKrjV2r/A1FuctT8XTLudy71k8BatNZkcobA
NSHDN7MGSRgYk9l9gFo/Hjse3TxCgrCv+/Mt1P4ybYei5sap6z14oc/bUQIn
Vx27uOQnCQEs3dySQQJfNRwM2TpDgmxISPzOPgIHPXYN9PhFXZ9MmTWO3QT2
kPt+MvYPZVOPXJFOAu+Y6D/+RYQLfiP5ot21BF5n5+w0X5wLGQ01qpwPBFb7
2HdYjcYFm/GZ7/3FBKanf9t3SpoLsnMmYqyXBJ6TP7orWYYL9MnXLefTCTwc
9nVbmTwXkuf/UA1IIXD14d710kpc2PTK1VX8CoE/Cz+cjiG5sLPIiecQQuDJ
B07PFJZxYdZN21rLj8AK37+zOKpU/oMD+oo2BFa5/LQ+VYMLfO17Tut2UOtT
d49YocOFdWVhxTVAYHuv8Sl1Qy7UZwkt+pcksJ/My4wX67gwuViFYyBN4IhX
Pg5rjLngwxK9nCBI4Gf/Tdet28IFvYjhb/mddDwb8ufp9n1ckDoacz/yOh1L
LSuyrz3ABXRexV8lkI6Vy88xLQ5yQbp7/twmZzreSBO9aO1AjRu3Kw+upeOr
0TR7Vy8uCCxc+pP2WQovu6/AuHiFC0uWZuo4E1L4n81tNbQbXOgJTl0rPkHD
2/oTL1yN5UJMyGOmZiMNe6oq/4i7Te1noaUf6xYNv85eVvMgnapHczlxVomG
d5Vph5W840Lv8Q02nosksYPTDyPTD1zwFTS/Kz0qgU9KvJr4UM2FDWUFs9sr
JfDtfw3s6j9x4WCL4H9xIRK4rxGMvnRzIeL3fePbQ+J49qTQhMM3LlTnb12t
/U4cSzFLHvcPUJ/P3caY48niWMt2s9zYGBeKhyptP5mL442C4tXeP7jg+uvt
GZFV4nj/vYrQ6Wku7OqIT+ALimOXjZcMT//igovNJpZDy3z8f+9fhf9//+r/
ADWEhwo=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-10, 10}, {-3.999999695243325, 0.49999984212841836`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.8605574462185516`*^9, 3.8605574952972956`*^9}, 
   3.8605575456195374`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Evaluate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\:0443", "[", "x", "]"}], "/.", 
       RowBox[{"First", "[", 
        RowBox[{"DSolve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"a", "*", 
               RowBox[{
                RowBox[{"y", "''"}], "[", "x", "]"}]}], "+", 
              RowBox[{"b", "*", 
               RowBox[{
                RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
              RowBox[{"c", "*", 
               RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", " ", "0"}], " ", 
            ",", " ", 
            RowBox[{
             RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}],
           ",", "y", ",", " ", "x"}], "]"}], "]"}]}], "]"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "10"}], ",", " ", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", 
     RowBox[{"-", "20"}], ",", " ", "20"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", 
     RowBox[{"-", "20"}], ",", " ", "20"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"c", ",", " ", 
     RowBox[{"-", "20"}], ",", " ", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.860557409518173*^9, 3.860557415462249*^9}, {
  3.86055823745755*^9, 3.8605583207366786`*^9}, {3.860558461477482*^9, 
  3.8605586944882846`*^9}, {3.86055875356918*^9, 3.860558754084518*^9}, {
  3.8605587889855385`*^9, 3.8605587934844923`*^9}, {3.8605588280749345`*^9, 
  3.8605588330739737`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 6.600000000000001, $CellContext`b$$ = 
    6.400000000000002, $CellContext`c$$ = 0.3000000000000007, Typeset`show$$ =
     True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -20, 20}, {
      Hold[$CellContext`b$$], -20, 20}, {
      Hold[$CellContext`c$$], -20, 20}}, Typeset`size$$ = {
    360., {115., 119.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$7223$$ = 
    0, $CellContext`b$7224$$ = 0, $CellContext`c$7225$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = -20, $CellContext`b$$ = -20, \
$CellContext`c$$ = -20}, "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$7223$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$7224$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$7225$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Evaluate[
         ReplaceAll[
          $CellContext`\:0443[$CellContext`x], 
          First[
           
           DSolve[{$CellContext`a$$ 
               Derivative[
                2][$CellContext`y][$CellContext`x] + $CellContext`b$$ 
               Derivative[
                1][$CellContext`y][$CellContext`x] + $CellContext`c$$ \
$CellContext`y[$CellContext`x] == 0, $CellContext`y[0] == 0, 
             Derivative[1][$CellContext`y][0] == 
             1}, $CellContext`y, $CellContext`x]]]], {$CellContext`x, -10, 
         10}], "Specifications" :> {{$CellContext`a$$, -20, 
         20}, {$CellContext`b$$, -20, 20}, {$CellContext`c$$, -20, 20}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{409., {188., 193.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8605583237137613`*^9, 3.8605586993357515`*^9, 
  3.8605587585365734`*^9, 3.86055879657749*^9, 3.8605588365947013`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], "/.", 
      RowBox[{"sol", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "10"}], ",", " ", "10"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.860556742122431*^9, 3.8605567438876643`*^9}, {
  3.8605583589294567`*^9, 3.860558361965863*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQXfvc99P//8oHGKBgNWPxEgZzBJ811d1IMlYJzhe+
cTRn0URFOD/o8KxkzVMKcH71e9ucCY/l4fwd5bOy1vvLwfl+k0IV/s2UgfPd
5+7183gjBecvO155rThaEs6Pa5kien6FOJxfl8C8jltYDM5n0JXf79wqAuff
6p7ZvvqqEJwvw5Wx8ouTIJyfbarFeluGH85PNr+34vBhbjhfq8Lqf94SDjh/
4d3gI5WOrHD+80ZRG3cJJjh/11QN1xdhf/fD+AYvb37Rn/sNznfZdZvzb9gH
OL9g5fofgsKP4fywNOWFl2pOwvnHz9zsMg4+YQ/jW+ke3BQw/TGcz1QmeidF
8gOcz84T0Jj07huc3/zgmnPR4r9w/obZbQF1nxgdYPz8RSkCT8JY4fy4rFmy
7Y0ccH5nYJml8RxuOJ9FZOqz+l98cP71060fWvgF4fzQ6iSzWYeF4Pwc7tdK
56JE4Hz51cemsb0ShfOrdzgH888Wh/MLluVsM9OXhPN5mMyT9J5KwfmuuSFT
tSbLwPkSO2XzXVXk4PxJRR0TDa7Lw/lBbf66c7cpwPla0S2hS2oV4fxrzzgX
TQ5VgvPPJT11FJJXhvOh+QHOBwD7irZQ
   "], {}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-10, 10}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.8605583642964373`*^9}]
}, Open  ]]
},
WindowSize->{836, 816},
WindowMargins->{{-1, Automatic}, {Automatic, 37}},
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (October 6, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 772, 20, 31, "Input"],
Cell[1354, 44, 454, 15, 33, "Output"]
}, Open  ]],
Cell[1823, 62, 94, 1, 31, InheritFromParent],
Cell[CellGroupData[{
Cell[1942, 67, 676, 16, 31, "Input"],
Cell[2621, 85, 28960, 481, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31618, 571, 1870, 47, 112, InheritFromParent],
Cell[33491, 620, 2590, 53, 398, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36118, 678, 520, 14, 72, "Input"],
Cell[36641, 694, 995, 22, 249, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

