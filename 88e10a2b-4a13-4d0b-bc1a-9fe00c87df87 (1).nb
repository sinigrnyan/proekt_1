Notebook[{Cell[
CellGroupData[{Cell[
BoxData[RowBox[{"sol1","=",RowBox[{"DSolve","[",RowBox[
{RowBox[{RowBox[{RowBox[{RowBox[{"y","''"}],"[","z","]"}]," ","+"," ",RowBox[{RowBox[
{"(",RowBox[{"1"," ","-"," ",RowBox[{"(",RowBox[{"n","/",RowBox[{"z","^","2"}]}],")"}]}],")"}],"*"," ",RowBox[
{"y","[","z","]"}]}]}]," ","\[Equal]"," ","0"}],","," ","y",","," ","z"}],"]"}]}]],
"Input",CellLabel -> "In[75]:= ",ExpressionUUID -> "2efad828-9e34-43a4-a63b-33cd783c5c67"],Cell[
BoxData[
RowBox[{"{",RowBox[{"{",RowBox[{"y","\[Rule]",RowBox[{"Function","[",RowBox[{RowBox[
{"{","z","}"}],",",RowBox[{RowBox[{SqrtBox["z"]," ",RowBox[{"BesselJ","[",RowBox[
{RowBox[{FractionBox["1","2"]," ",SqrtBox[RowBox[{"1","+",RowBox[{"4"," ","n"}]}]]}],",","z"}],"]"}]," ",TemplateBox[
{"1"},"C"]}],"+",RowBox[{SqrtBox["z"]," ",RowBox[{"BesselY","[",RowBox[{RowBox[{FractionBox[
"1","2"]," ",SqrtBox[RowBox[{"1","+",RowBox[{"4"," ","n"}]}]]}],",","z"}],"]"}]," ",TemplateBox[
{"2"},"C"]}]}]}],"]"}]}],"}"}],"}"}],StandardForm],"Output",CellLabel -> "Out[75]= ",
ExpressionUUID -> "1d3bc096-a730-47e0-bdb9-2cfee6da6b37"]},Open],ExpressionUUID -> "aedc08d0-3de1-4696-8c4e-e9ffb453cb92"],Cell[
CellGroupData[
{Cell[
BoxData[{RowBox[{"Clear","[",RowBox[{"x",",","y",",","t"}],"]"}],"\n",RowBox[
{"a","=",RowBox[{"{",RowBox[{RowBox[{RowBox[{RowBox[{RowBox[{"y","'"}],"[","x","]"}]," ","+"," ",RowBox[
{RowBox[{"y","[","x","]"}],"*",RowBox[{"Tan","[","x","]"}]}]}]," ","\[Equal]"," ",RowBox[
{"Sin","[",RowBox[{"2","*","x"}],"]"}]}],","," ",RowBox[{RowBox[{"y","[","0","]"}],"==","2"}]}],"}"}]}],"\n",RowBox[
{"sol","=",RowBox[{"DSolve","[",RowBox[{"a",",",RowBox[{"y","[","x","]"}],",",RowBox[
{"{",RowBox[{"x",",",RowBox[{"-","10"}],","," ","10"}],"}"}]}],"]"}]}],"\n",RowBox[
{"Plot","[",RowBox[{RowBox[{RowBox[{"y","[","x","]"}]," ","/."," ","sol"}],","," ",RowBox[
{"{",RowBox[{"x",","," ",RowBox[{"-","10"}],","," ","10"}],"}"}]}],"]"}]}],"Input",
CellLabel -> "In[105]:= ",ExpressionUUID -> "601c7609-27fa-411f-b1d3-4922e829be8a"],Cell[
BoxData[
RowBox[{"{",RowBox[{RowBox[{RowBox[{RowBox[{RowBox[{"Tan","[","x","]"}]," ",RowBox[
{"y","[","x","]"}]}],"+",RowBox[{SuperscriptBox["y","\[Prime]",MultilineFunction -> None],"[","x","]"}]}],"\[Equal]",RowBox[
{"Sin","[",RowBox[{"2"," ","x"}],"]"}]}],",",RowBox[{RowBox[{"y","[","0","]"}],"\[Equal]","2"}]}],"}"}],
StandardForm],"Output",CellLabel -> "Out[106]= ",ExpressionUUID -> "5296ac9b-f09f-4614-be04-e19903027b84"],Cell[
BoxData[
RowBox[{"{",RowBox[{"{",RowBox[{RowBox[{"y","[","x","]"}],"\[Rule]",RowBox[{RowBox[
{"-","2"}]," ",RowBox[{"(",RowBox[{RowBox[{"-","2"}],"+",RowBox[{"Cos","[","x","]"}]}],")"}]," ",RowBox[
{"Cos","[","x","]"}]}]}],"}"}],"}"}],StandardForm],"Output",CellLabel -> "Out[107]= ",
ExpressionUUID -> "72e894e1-0281-44fa-b74b-8f0435c4bbbd"],Cell[
BoxData[GraphicsBox[
{{{{},{},TagBox[{Directive[Opacity[1.`],RGBColor[0.368417`,0.506779`,0.709798`],AbsoluteThickness[
1.6`]],LineBox[CompressedData["1:"]]},
Function[Annotation[Slot[1],"Charting`Private`Tag$74439#1"]]]}},{}},{DisplayFunction -> Identity,Ticks -> {Automatic,Automatic},AxesOrigin -> {0,0},FrameTicks -> {{Automatic,Automatic},{Automatic,Automatic}},GridLines -> {None,None},DisplayFunction -> Identity,PlotRangePadding -> {{Scaled[
0.02`],Scaled[0.02`]},{Scaled[0.05`],Scaled[0.05`]}},PlotRangeClipping -> True,ImagePadding -> All,DisplayFunction -> Identity,AspectRatio -> NCache[
Power[GoldenRatio,-1],0.6180339887498948`],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0,0},RuleDelayed[
DisplayFunction,Identity],Frame -> {{False,False},{False,False}},FrameLabel -> {{None,None},{None,None}},FrameTicks -> {{Automatic,Automatic},{Automatic,Automatic}},GridLines -> {None,None},GridLinesStyle -> Directive[
GrayLevel[0.5`,0.4`]],Method -> CompressedData["1:eJzlUstOwzAQbMv7wlscuPENfAAqLYVKFKqm6t1N1u0K1xt5bYnw2/wAtqs+CbkgTkRKtPbuzuxM9mZMA7lXq9V413+eka1sLE4DpyC59EEbpHDK3pPTmTBFYgsFfOQTTWdpJiymW03Xq6ZHI/IpptzVFoxILZKWOxV8Bz4YgWFfZ27j83m3VXLug6HHeuuRY+gTY0RtrKPGYGgccBDXEYqhhOhBSkgtVw4UdD7hZKr8a2W9ojIwGe8GYbjfSh6vw/QJ9S+wwkhtQ7lCDbypu8QqaQAkmVnLGSbTowyW5pTg5kqkMANtK3HD6O9JsK2pVEmuSMLxhfQ2xelqM3rA07hKcyPOAtiYSTkL0Z8EPwD3v6sPEEkqvPhJx+m4Ucw/0F35oEVkMtTCAg+J1GseOyrlnYQpkb0XxYJiPuRhWKbFzSZCyJcULW+6mTcVbbH67Ykii/UNgX1hbEkBLsH/jKFkzS6ieTlCNhLKwX9y4gucBRzd"],PlotRange -> {{-10,10},{-5.9999995936577655`,1.99999999999994`}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],Scaled[0.02`]},{Scaled[0.02`],Scaled[0.02`]}},Ticks -> {Automatic,Automatic}}],
StandardForm],"Output",CellLabel -> "Out[108]= ",ExpressionUUID -> "93950bad-7f8e-4e1d-a58a-51a774d9bce5"]},
Open],ExpressionUUID -> "40b7b4c9-57c1-411b-9305-1fc0ba88772c"],Cell[
CellGroupData[
{Cell[
BoxData[{RowBox[{"Clear","[",RowBox[{"x",",","y",",","t",",","b",",","c",",","o",",","a",",","sol"}],"]"}],"\n",RowBox[
{"a","=",RowBox[{"{",RowBox[{RowBox[{RowBox[{RowBox[{"o","*",RowBox[{RowBox[{"y","''"}],"[","x","]"}]}]," ","+"," ",RowBox[
{"b","*",RowBox[{RowBox[{"y","'"}],"[","x","]"}]}],"+",RowBox[{"c","*",RowBox[{"y","[","x","]"}]}]}]," ","\[Equal]"," ","0"}],","," ",RowBox[
{RowBox[{"y","[","0","]"}],"==","0"}],",",RowBox[{RowBox[{RowBox[{"y","'"}],"[","0","]"}],"==","1"}]}],"}"}]}],"\n",RowBox[
{RowBox[{"sol","[",RowBox[{"x_",","," ","o_",",","b_",",","c_"}],"]"}]," ","=",RowBox[
{RowBox[{"y","[","x","]"}]," ","/."," ",RowBox[{"First","@",RowBox[{"DSolve","[",RowBox[
{"a",",","  ","y",","," ",RowBox[{"{",RowBox[{"x",","," ",RowBox[{"-","5"}],","," ","5"}],"}"}]}],"]"}]}]}]}],"\n",RowBox[
{"Manipulate","[",RowBox[{RowBox[{"Plot","[",RowBox[{RowBox[{"Evaluate","@",RowBox[
{"sol","[",RowBox[{"x",","," ","o",","," ","b",","," ","c"}],"]"}]}],","," ",RowBox[
{"{",RowBox[{"x",","," ",RowBox[{"-","5"}],","," ","5"}],"}"}],","," ",RowBox[{"Filling"," ","\[Rule]"," ","0"}],","," ","\n",RowBox[
{"PlotLabel"," ","\[Rule]"," ",RowBox[{"Column","[",RowBox[{"sol","[",RowBox[{"x",","," ","o",","," ","b",","," ","c"}],"]"}],"]"}]}]}],"]"}],","," ","\n",RowBox[
{"{",RowBox[{RowBox[{"{",RowBox[{"o",","," ","0",","," ","\"o\""}],"}"}],","," ",RowBox[
{"-","10"}],","," ","10",",",RowBox[{"Appearance"," ","\[Rule]"," ","\"Labeled\""}]}],"}"}],","," ","\n",RowBox[
{"{",RowBox[{RowBox[{"{",RowBox[{"b",","," ","0",","," ","\"b\""}],"}"}],","," ",RowBox[
{"-","10"}],","," ","10",","," ",RowBox[{"Appearance"," ","\[Rule]"," ","\"Labeled\""}]}],"}"}],","," ","\n",RowBox[
{"{",RowBox[{RowBox[{"{",RowBox[{"c",","," ","0",","," ","\"c\""}],"}"}],","," ",RowBox[
{"-","10"}],","," ","10",","," ",RowBox[{"Appearance"," ","\[Rule]"," ","\"Labeled\""}]}],"}"}]}],"]"}]}],
"Input",CellLabel -> "In[71]:= ",ExpressionUUID -> "92781e56-06c2-40e9-bb6b-ca5b55f2b3a9"],Cell[
BoxData[
RowBox[{"{",RowBox[{RowBox[{RowBox[{RowBox[{"c"," ",RowBox[{"y","[","x","]"}]}],"+",RowBox[
{"b"," ",RowBox[{SuperscriptBox["y","\[Prime]",MultilineFunction -> None],"[","x","]"}]}],"+",RowBox[
{"o"," ",RowBox[{SuperscriptBox["y","\[Prime]\[Prime]",MultilineFunction -> None],"[","x","]"}]}]}],"\[Equal]","0"}],",",RowBox[
{RowBox[{"y","[","0","]"}],"\[Equal]","0"}],",",RowBox[{RowBox[{SuperscriptBox["y",
"\[Prime]",MultilineFunction -> None],"[","0","]"}],"\[Equal]","1"}]}],"}"}],StandardForm],
"Output",CellLabel -> "Out[72]= ",ExpressionUUID -> "b144d11f-bb8f-457e-8430-5e4216783360"],Cell[
BoxData[
FractionBox[RowBox[{SuperscriptBox["\[ExponentialE]",RowBox[{"-",FractionBox[RowBox[
{RowBox[{"(",RowBox[{"b","+",SqrtBox[RowBox[{SuperscriptBox["b","2"],"-",RowBox[{"4"," ","c"," ","o"}]}]]}],")"}]," ","x"}],
RowBox[{"2"," ","o"}]]}]]," ",RowBox[{"(",RowBox[{RowBox[{"-","1"}],"+",SuperscriptBox[
"\[ExponentialE]",FractionBox[RowBox[{SqrtBox[RowBox[{SuperscriptBox["b","2"],"-",RowBox[
{"4"," ","c"," ","o"}]}]]," ","x"}],"o"]]}],")"}]," ","o"}],SqrtBox[RowBox[{SuperscriptBox[
"b","2"],"-",RowBox[{"4"," ","c"," ","o"}]}]]],StandardForm],"Output",CellLabel -> "Out[73]= ",
ExpressionUUID -> "43a7e216-055b-4073-b640-ac7c77a5b1b9"],Cell[
BoxData[TagBox[StyleBox[
DynamicModuleBox[{Set[b$$,-7.82`],Set[c$$,10.`],Set[o$$,10.`],Set[Typeset`show$$,
True],Set[Typeset`bookmarkList$$,{}],Set[Typeset`bookmarkMode$$,"Menu"],Typeset`animator$$,Set[
Typeset`animvar$$,1],Set[Typeset`name$$,"\"untitled\""],Set[Typeset`specs$$,{{{Hold[
o$$],0,"o"},-10,10},{{Hold[b$$],0,"b"},-10,10},{{Hold[c$$],0,"c"},-10,10}}],Set[Typeset`size$$,
Automatic],Set[Typeset`update$$,0],Set[Typeset`initDone$$,False],Set[Typeset`skipInitDone$$,
True]},DynamicBox[Manipulate`ManipulateBoxes[1,StandardForm,RuleDelayed["Variables",
{Set[b$$,0],Set[c$$,0],Set[o$$,0]}],RuleDelayed["ControllerVariables",{}],RuleDelayed[
"OtherVariables",{Typeset`show$$,Typeset`bookmarkList$$,Typeset`bookmarkMode$$,Typeset`animator$$,Typeset`animvar$$,Typeset`name$$,Typeset`specs$$,Typeset`size$$,Typeset`update$$,Typeset`initDone$$,Typeset`skipInitDone$$}],
RuleDelayed["Body",Plot[Evaluate[sol[x,o$$,b$$,c$$]],{x,-5,5},Filling -> 0,PlotLabel -> Column[
sol[x,o$$,b$$,c$$]]]],RuleDelayed["Specifications",{{{o$$,0,"o"},-10,10,Appearance -> "Labeled"},{{b$$,0,"b"},-10,10,Appearance -> "Labeled"},{{c$$,0,"c"},-10,10,Appearance -> "Labeled"}}],
RuleDelayed["Options",{}],RuleDelayed["DefaultOptions",{}]],SingleEvaluation -> True],
RuleDelayed[DynamicModuleValues,{}],RuleDelayed[Deinitialization,None],RuleDelayed[
UntrackedVariables,{Typeset`size$$}],SynchronousInitialization -> True,RuleDelayed[
UnsavedVariables,{Typeset`initDone$$}],RuleDelayed[UndoTrackedVariables,{Typeset`show$$,Typeset`bookmarkMode$$}],
ExpressionUUID -> "7b3c975c-bc87-49bb-a0af-d6024d810345"],"Manipulate",Deployed -> True,
StripOnInput -> False],Manipulate`InterpretManipulate[1]],StandardForm],"Output",
CellLabel -> "Out[74]= ",ExpressionUUID -> "89223936-3c0d-42df-86d2-5f0973852612"]},
Open],ExpressionUUID -> "94ca43ec-001d-4ec3-aeaf-31396123b1af"],Cell[
CellGroupData[
{Cell[
BoxData[""],"Input",ExpressionUUID -> "1f068814-35b4-400a-8c6f-844fd5a3bba0"],Cell[
BoxData[
TemplateBox[{"Syntax","bktmop","\"Expression \\\"\\!\\(\\*TagBox[RowBox[{RowBox[{\\\"Clear\\\", \\\"[\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"y\\\", \\\",\\\", \\\"t\\\", \\\",\\\", \\\"b\\\", \\\",\\\", \\\"c\\\", \\\",\\\", \\\"o\\\", \\\",\\\", \\\"a\\\", \\\",\\\", \\\"sol\\\", \\\",\\\", \\\"w\\\", \\\",\\\", \\\"l\\\", \\\",\\\", \\\"f\\\"}], \\\"]\\\"}], RowBox[{\\\"sol\\\", \\\"=\\\", RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{RowBox[{\\\"x\\\", \\\"''\\\"}], \\\"[\\\", \\\"t\\\", \\\"]\\\"}], \\\"+\\\", RowBox[{\\\"0\\\", \\\"*\\\", RowBox[{RowBox[{\\\"x\\\", \\\"'\\\"}], \\\"[\\\", \\\"t\\\", \\\"]\\\"}]}], \\\"+\\\", RowBox[{RowBox[{\\\"x\\\", \\\"[\\\", \\\"t\\\", \\\"]\\\"}], \\\"*\\\", RowBox[{\\\"(\\\", RowBox[{\\\"1\\\", \\\"-\\\", RowBox[{\\\"0\\\", \\\"*\\\", RowBox[{\\\"x\\\", \\\"[\\\", \\\"t\\\", \\\"]\\\"}], \\\"*\\\", RowBox[{\\\"x\\\", \\\"[\\\", \\\"t\\\", \\\"]\\\"}]}]}], \\\")\\\"}]}]}], \\\"==\\\", RowBox[{\\\"0\\\", \\\"*\\\", \\\"Cos\\\", RowBox[{\\\"(\\\", RowBox[{\\\"w\\\", \\\"*\\\", \\\"t\\\"}], \\\")\\\"}]}]}], \\\"}\\\"}], \\\",\\\", \\\"x\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"t\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"5\\\"}], \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]}], RowBox[{RowBox[{RowBox[{\\\"ParametricPlot\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Evaluate\\\", \\\"[\\\", RowBox[{RowBox[{\\\"x\\\", \\\"[\\\", \\\"t\\\", \\\"]\\\"}], \\\"/.\\\", \\\"sol\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"t\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"5\\\"}], \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"-\\\", \\\"10\\\"}], \\\",\\\", \\\"10\\\"}], \\\"}\\\"}], Short[#1, 3] & ]\\)\\\" has no opening \\\"\\!\\(\\*TagBox[\\\"\\\\\\\"{\\\\\\\"\\\", Short[#1, 5] & ]\\)\\\"\\!\\(\\*TagBox[\\\"\\\\\\\"\\\\\\\"\\\", Short[#1, 5] & ]\\).\"",2,112,105,29489575209449439157,"Local"},
"MessageTemplate"],StandardForm],"Message","MSG",ExpressionUUID -> "0f2ab398-04db-43c4-b1a4-56127638b389"]},
Open],ExpressionUUID -> "e6ef9797-a568-402e-952e-fa9e90c3c468"],Cell[
CellGroupData[
{Cell[
BoxData[{RowBox[{"Clear","[",RowBox[{"x",",","y",",","t",",","b",",","c",",","o",",","a",",","sol",","," ","w",","," ","l",",","f"}],"]"}],"\n",RowBox[
{"sol","=",RowBox[{"NDSolve","[",RowBox[{RowBox[{"{",RowBox[{RowBox[{RowBox[{RowBox[
{"x","''"}],"[","t","]"}],"+",RowBox[{"0","*",RowBox[{RowBox[{"x","'"}],"[","t","]"}]}],"+",RowBox[
{RowBox[{"x","[","t","]"}],"*",RowBox[{"(",RowBox[{"1","-",RowBox[{"0","*",RowBox[
{"x","[","t","]"}],"*",RowBox[{"x","[","t","]"}]}]}],")"}]}]}],"==",RowBox[{"0","*","Cos",RowBox[
{"(",RowBox[{"w","*","t"}],")"}]}]}],"}"}],",","x",",",RowBox[{"{",RowBox[{"t",",",RowBox[
{"-","5"}],",","5"}],"}"}]}],"]"}]}],"\n",RowBox[{"ParametricPlot","[",RowBox[{RowBox[
{"Evaluate","[",RowBox[{RowBox[{"x","[","t","]"}]," ","/."," ","sol"}],"]"}],","," ",RowBox[
{"{",RowBox[{"t",","," ",RowBox[{"-","5"}],",","5"}],"}"}]}],"]"}]}],"Input",CellLabel -> "In[112]:= ",
ExpressionUUID -> "747efd31-e3c2-48b3-add1-35f4be70f340"],Cell[
BoxData[TemplateBox[
{"NDSolve","ndnco","\"The number of constraints (\\!\\(\\*TagBox[\\\"0\\\", Short[#1, 5] & ]\\)) (initial conditions) is not equal to the total differential order of the system plus the number of discrete variables (\\!\\(\\*TagBox[\\\"2\\\", Short[#1, 5] & ]\\)).\"",2,113,106,29489575209449439157,"Local"},
"MessageTemplate"],StandardForm],"Message","MSG",ExpressionUUID -> "ed1a1b59-4dc5-4f2a-9eb4-735c1768d5d5"],Cell[
BoxData[
RowBox[{"NDSolve","[",RowBox[{RowBox[{"{",RowBox[{RowBox[{RowBox[{"x","[","t","]"}],"+",RowBox[
{SuperscriptBox["x","\[Prime]\[Prime]",MultilineFunction -> None],"[","t","]"}]}],"\[Equal]","0"}],"}"}],",","x",",",RowBox[
{"{",RowBox[{"t",",",RowBox[{"-","5"}],",","5"}],"}"}]}],"]"}],StandardForm],"Output",
CellLabel -> "Out[113]= ",ExpressionUUID -> "83564bf1-adb0-4448-b8ad-6308e76a60b5"],Cell[
BoxData[
TemplateBox[{"ReplaceAll","reps","\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{\\\"x\\\", \\\"[\\\", \\\"t\\\", \\\"]\\\"}], \\\"+\\\", RowBox[{SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", MultilineFunction -> None], \\\"[\\\", \\\"t\\\", \\\"]\\\"}]}], \\\"\[Equal]\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", \\\"x\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"t\\\", \\\",\\\", RowBox[{\\\"-\\\", \\\"5\\\"}], \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}], Short[#1, 5] & ]\\) is neither a list of replacement rules nor a valid dispatch table, and so cannot be used for replacing.\"",2,114,107,29489575209449439157,"Local"},
"MessageTemplate"],StandardForm],"Message","MSG",ExpressionUUID -> "3f61c5ee-abef-4268-b4a4-8d1a324cf497"],Cell[
BoxData[
TemplateBox[{"NDSolve","dsvar","\"\\!\\(\\*TagBox[RowBox[{\\\"-\\\", \\\"4.999795918367347`\\\"}], Short[#1, 5] & ]\\) cannot be used as a variable.\"",2,114,108,29489575209449439157,"Local"},
"MessageTemplate"],StandardForm],"Message","MSG",ExpressionUUID -> "88fe6bf5-4380-4409-a024-ee1de60d2c3d"],Cell[
BoxData[
TemplateBox[{"ReplaceAll","reps","\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{\\\"x\\\", \\\"[\\\", RowBox[{\\\"-\\\", \\\"4.999795918367347`\\\"}], \\\"]\\\"}], \\\"+\\\", RowBox[{SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", MultilineFunction -> None], \\\"[\\\", RowBox[{\\\"-\\\", \\\"4.999795918367347`\\\"}], \\\"]\\\"}]}], \\\"\[Equal]\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", \\\"x\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"4.999795918367347`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"5\\\"}], \\\",\\\", \\\"5\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}], Short[#1, 5] & ]\\) is neither a list of replacement rules nor a valid dispatch table, and so cannot be used for replacing.\"",2,114,109,29489575209449439157,"Local"},
"MessageTemplate"],StandardForm],"Message","MSG",ExpressionUUID -> "f8ee7b18-151f-4d08-a02e-61d1ee6fe762"],Cell[
BoxData[
TemplateBox[{"NDSolve","dsvar","\"\\!\\(\\*TagBox[RowBox[{\\\"-\\\", \\\"4.999795918367347`\\\"}], Short[#1, 5] & ]\\) cannot be used as a variable.\"",2,114,110,29489575209449439157,"Local"},
"MessageTemplate"],StandardForm],"Message","MSG",ExpressionUUID -> "2e7eed7b-9158-4447-be22-0bfea53b65b0"],Cell[
BoxData[
TemplateBox[{"ReplaceAll","reps","\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", RowBox[{\\\"NDSolve\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{\\\"x\\\", \\\"[\\\", RowBox[{\\\"-\\\", \\\"4.999795918367347`\\\"}], \\\"]\\\"}], \\\"+\\\", RowBox[{SuperscriptBox[\\\"x\\\", \\\"\[Prime]\[Prime]\\\", MultilineFunction -> None], \\\"[\\\", RowBox[{\\\"-\\\", \\\"4.999795918367347`\\\"}], \\\"]\\\"}]}], \\\"\[Equal]\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\",\\\", \\\"x\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"4.999795918367347`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \\\"5.`\\\"}], \\\",\\\", \\\"5.`\\\"}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"}\\\"}], Short[#1, 5] & ]\\) is neither a list of replacement rules nor a valid dispatch table, and so cannot be used for replacing.\"",2,114,111,29489575209449439157,"Local"},
"MessageTemplate"],StandardForm],"Message","MSG",ExpressionUUID -> "22cd4c1b-059e-481e-9cb2-6126aa4ae6a4"],Cell[
BoxData[
TemplateBox[{"General","stop","\"Further output of \\!\\(\\*TagBox[StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"], Short[#1, 5] & ]\\) will be suppressed during this calculation.\"",2,114,112,29489575209449439157,"Local"},
"MessageTemplate"],StandardForm],"Message","MSG",ExpressionUUID -> "bc502d3e-99ed-462a-9a2c-157dfd9d67ff"],Cell[
BoxData[
TemplateBox[{"NDSolve","dsvar","\"\\!\\(\\*TagBox[RowBox[{\\\"-\\\", \\\"4.795714285714286`\\\"}], Short[#1, 5] & ]\\) cannot be used as a variable.\"",2,114,113,29489575209449439157,"Local"},
"MessageTemplate"],StandardForm],"Message","MSG",ExpressionUUID -> "2c5d057b-9932-431e-ada9-bc5e290c3205"],Cell[
BoxData[
TemplateBox[{"General","stop","\"Further output of \\!\\(\\*TagBox[StyleBox[RowBox[{\\\"NDSolve\\\", \\\"::\\\", \\\"dsvar\\\"}], \\\"MessageName\\\"], Short[#1, 5] & ]\\) will be suppressed during this calculation.\"",2,114,114,29489575209449439157,"Local"},
"MessageTemplate"],StandardForm],"Message","MSG",ExpressionUUID -> "b26558bc-919e-43f7-9e65-1b73ecbf39d4"],Cell[
BoxData[
GraphicsBox[{{},{}},{DisplayFunction -> Identity,PlotRangePadding -> {{Scaled[0.05`],Scaled[
0.05`]},{Scaled[0.05`],Scaled[0.05`]}},PlotRangeClipping -> True,ImagePadding -> All,DisplayFunction -> Identity,Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0,0},RuleDelayed[
DisplayFunction,Identity],FrameLabel -> {{None,None},{None,None}},FrameTicks -> {{Automatic,Automatic},{Automatic,Automatic}},GridLinesStyle -> Directive[
GrayLevel[0.5`,0.4`]],Method -> CompressedData["1:eJylUttqAjEQXatSfJHSx775Df2AIl21hSriSt9jOtFgzCwzCbTf7Q84WbCXZclLAwlnMmfOHCaZ7HBjboqi4IEcb5bDT7SJDqoHASUYFV1YkKoPVvOrD0BKB4ve9DOltwLegVh49Nis81OLci9gK1rHJUaGNbJtVP8YasCWIvBQwFw5ho5GM2NAB84aGgl4sfuDkx1ML8NMnUiJF5vuW8nxb5k1Wv8PrWSpJKyd9cDZh0ijMgRgkE7PkRhpiR/wPZwO3dopDSfwIaubrH9WaWxT5zpyX1UKV+jbLe4EVFqJ8/08+uY7MF+5F4tvh2g="],PlotRange -> {{0.`,0.`},{0.`,0.`}},PlotRangeClipping -> True,PlotRangePadding -> {Scaled[
0.02`],Scaled[0.02`]},Ticks -> {Automatic,Automatic}}],StandardForm],"Output",CellLabel -> "Out[114]= ",
ExpressionUUID -> "91586769-5120-4806-a9f5-81051c899882"]},Open],ExpressionUUID -> "a71b7c12-0225-4044-a51c-e35b4d11089d"]},
StyleDefinitions -> "Default.nb",FrontEndVersion -> "13. for Wolfram Cloud 1.62 (April 8, 2022)"]